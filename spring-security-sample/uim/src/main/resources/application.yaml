server:
  port: 8000
management:
  endpoints:
    web:
      exposure:
        include: "prometheus"
spring:
  thymeleaf:
    cache: false
    encoding: utf-8
    mode: HTML
    suffix: .html
    prefix: classpath:/templates/
  main:
    allow-bean-definition-overriding: true
  application:
    name: uim
  cloud:
    nacos:
      discovery:
        server-addr: nacos.kevin.com:80
        username: nacos
        password: 888888
  datasource:
    url: jdbc:postgresql://localhost:5432/sampleuser
    username: postgres
    password: postgres
  redis:
    database: 0
    host: localhost
    port: 6379
    jedis:
      pool:
        max-active: 20
        max-idle: 20
        max-wait: 10
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:8000
          audiences: https://my-resource-server.example.com
          jwk-set-uri: http://localhost:8000/oauth2/jwks
#      authorizationserver:
#        client:
#          oidc-client:
#            registration:
#              client-id: "oidc-client"
#              client-secret: "{noop}secret"
#              client-authentication-methods:
#                - "client_secret_basic"
#              authorization-grant-types:
#                - "authorization_code"
#                - "refresh_token"
#              redirect-uris:
#                - "http://127.0.0.1:8000/login/oauth2/code/oidc-client"
#              post-logout-redirect-uris:
#                - "http://127.0.0.1:8000/"
#              scopes:
#                - "openid"
#                - "profile"
#            require-authorization-consent: true
  zipkin:
    base-url: http://zipkin.kevin.com:80

mybatis:
  configuration:
    map-underscore-to-caml-case: true

logging:
  level:
    com.kevin.sample.uim.mapper: debug
    org.springframework.security: DEBUG