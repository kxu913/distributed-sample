spring:
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://localhost:5432/ds0
#    username: postgres
#    password: postgres
  shardingsphere:
    props:
      sql-show: true
    mode:
      type: Memory
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/ds0
        username: postgres
        password: postgres
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/ds0
        username: postgres
        password: postgres

      rules:
        sharding:
          tables:
            t_order:
              actualDataNodes: ds0.t_order$->{0..1}
              keyGenerateStrategy:
                column: order_id
                keyGeneratorName: orderKey
              tableStrategy:
                standard:
                  shardingColumns: order_id
                  shardingAlgorithmName: orderIdInline
          shardingAlgorithms:
            orderIdInline:
              type: INLINE
              props:
                algorithmExpression: ds0.t_order$->{order_id % 2}
          keyGenerators:
            orderKey:
              type: SNOWFLAKE


